# -*- mode: ruby -*-
# vi: set ft=ruby :
Vagrant.configure("2") do |config|
  masters = [
    {
      ip: "172.16.200.101",
      hostname: "master-1",
      cpus: 1,
      memory: 2048,
      roles: Set["registry", "alluxio-master", "alluxio-job-master", "hive-metastore", "presto-coordinator"]
    }
  ]

  workers = [
    {
      ip: "172.16.200.201",
      hostname: "worker-1",
      cpus: 1,
      memory: 2048,
      roles: Set["alluxio-worker", "alluxio-job-worker", "presto-worker"]
    }
  ]

  nodes = masters + workers

  unless nodes.count {|node| node[:roles].include? "hive-metastore" } <= 1
    raise "currently only one hive-metastore instance are supported"
  end

  unless nodes.count {|node| node[:roles].include? "presto-coordinator"} <= 1
    raise "currently only one presto-coordinator instance are supported"
  end

  image_prefix = "#{masters.first[:ip]}:5000/potatobox"
  image_tag = "latest"

  nodes.each do |node|
    config.vm.define node[:hostname], primary: node[:hostname] == "master-1" do |m|
      m.vm.box = "ubuntu/bionic64"
      m.vm.hostname = node[:hostname]
      m.vm.network "private_network", ip: node[:ip]
      m.vm.provider "virtualbox" do |vb|
        vb.memory = "#{node[:memory]}"
        vb.cpus = node[:cpus]
      end

      m.vm.provision "shell", name: "apt_mirror", inline: <<-SHELL
        sed -i -E 's/\\w+.ubuntu.com/mirrors.aliyun.com/g' /etc/apt/sources.list
        apt-get update
      SHELL

      m.vm.provision "shell", name: "ansible", inline: <<-SHELL
        apt-get install -y ansible
      SHELL

      m.vm.provision "shell", name: "docker", inline: <<-SHELL
        set -xeu
        curl -sS https://get.docker.com/ -o /tmp/get_docker.sh
        sh /tmp/get_docker.sh --mirror Aliyun
        rm /tmp/get_docker.sh
        adduser vagrant docker
        curl -sSL "https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

        echo '{"insecure-registries" : ["#{masters.first[:ip]}:5000"]}' > /etc/docker/daemon.json
        chmod 600 /etc/docker/daemon.json

        systemctl enable docker
        systemctl restart docker
      SHELL

      if node[:hostname] == "master-1" then
        m.vm.provision "registry", type: "ansible" do |ansible|
          ansible.playbook = "roles/registry/playbook.yaml"
        end

        m.vm.synced_folder "../../", "/home/vagrant/src/potatobox"
        m.vm.provision "shell", name: "image", inline: <<-SHELL
          set -xeu
          cd src/potatobox/image
          export IMAGE_PREFIX=#{image_prefix}
          export IMAGE_TAG=#{image_tag}
          ./builder.sh build
          ./builder.sh push
        SHELL
      end

      m.vm.synced_folder "./.data/alluxio/underfs", "/var/lib/alluxio/underfs", create: true

      node[:roles].each do |role|
        m.vm.provision role, type: "ansible" do |ansible|
          ansible.playbook = "roles/#{role}/playbook.yaml"
          ansible.extra_vars = {
            image_prefix: image_prefix,
            image_tag: image_tag,
            image_prefix: image_prefix,
            node_hostname: node[:ip],
            role: role,
            alluxio_master_hostname: begin
              nodes.filter { |i| i[:roles].include? "alluxio-master" }
                .first[:ip]
            end,
            alluxio_master_embedded_journal_addresses: begin
              nodes.filter { |i| i[:roles].include? "alluxio-master" }
                .map { |i| "#{i[:ip]}:19200" }
                .join ","
            end,
            alluxio_master_rpc_addresses: begin
              nodes.filter { |i| i[:roles].include? "alluxio-master" }
                .map { |i| "#{i[:ip]}:19998" }
                .join ","
            end,
            hive_metastore_uris: begin
              nodes.filter { |i| i[:roles].include? "hive-metastore" }
                .map { |i| "thrift://#{i[:ip]}:9083" }
                .join ","
            end,
            presto_discovery_uri: begin
              presto_coordinator = nodes.filter { |i| i[:roles].include? "presto-coordinator"} .first
              "http://#{presto_coordinator[:ip]}:8080"
            end
          }
        end
      end
    end
  end
end
